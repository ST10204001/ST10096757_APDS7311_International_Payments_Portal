{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maler\\\\Documents\\\\GitHub\\\\ST10096757_APDS7311_International_Payments_Portal-1\\\\register.login\\\\Frontend\\\\src\\\\components\\\\LoginRegister.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginRegister = () => {\n  _s();\n  const [username, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [userFirstName, setUserFirstName] = useState('');\n  const [userLastName, setUserLastName] = useState('');\n  const [idNumber, setIdNumber] = useState('');\n  const [accountNumber, setAccountNumber] = useState('');\n  const [isEmployee, setIsEmployee] = useState(false); // State for employee toggle\n  const [error, setError] = useState(null); // To store error messages\n  const [successMessage, setSuccessMessage] = useState(null); // To store success messages\n  const [isLogin, setIsLogin] = useState(true); // For toggling between login/register forms\n\n  const navigate = useNavigate();\n  const validateInput = () => {\n    const usernamePattern = /^[a-zA-Z0-9]{3,20}$/; // Alphanumeric, 3-20 characters\n    const passwordPattern = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/; // Minimum six characters, at least one letter and one number\n    const idNumberPattern = /^[0-9]{13}$/; // 13 digit number\n    const accountNumberPattern = /^[0-9]{10}$/; // 10 digit number\n\n    if (!usernamePattern.test(username)) {\n      setError(\"Invalid input. Please try again.\");\n      return false;\n    }\n    if (!passwordPattern.test(password)) {\n      setError(\"Invalid input. Please try again.\");\n      return false;\n    }\n    if (!isLogin && !idNumberPattern.test(idNumber)) {\n      setError(\"Invalid input. Please try again..\");\n      return false;\n    }\n    if (!isLogin && !accountNumberPattern.test(accountNumber)) {\n      setError(\"Invalid input. Please try again.\");\n      return false;\n    }\n    setError(null);\n    return true;\n  };\n\n  // Error message display\n  const ErrorMessage = () => {\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this);\n    }\n    return null;\n  };\n  const SuccessMessage = () => {\n    if (successMessage) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this);\n    }\n    return null;\n  };\n\n  // Registration handler\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (isEmployee) {\n      // If employee, prevent registration and show a message\n      setError('Employees cannot register through this form. Please contact an admin.');\n      return;\n    }\n    if (!validateInput()) {\n      return;\n    }\n    const userData = {\n      username,\n      password,\n      userFirstName,\n      userLastName,\n      idNumber,\n      accountNumber\n    };\n    try {\n      // Send the registration data to the backend API\n      const response = await fetch('/api/register', {\n        // Use the relative path\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData),\n        credentials: 'include' // Allow cookies to be sent\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const responseData = await response.json(); // Parse JSON response\n      console.log('Registration success:', responseData);\n      setSuccessMessage(responseData.message);\n      setError(null);\n\n      // Navigate to the login form after successful registration\n      setTimeout(() => {\n        setIsLogin(true);\n        navigate('/');\n      }, 2000); // Optional delay for displaying success message\n    } catch (err) {\n      console.error('Registration error:', err);\n      setError(err.message || 'Something went wrong');\n      setSuccessMessage(null);\n    }\n  };\n\n  // Login handler\n  const handleLogin = async e => {\n    e.preventDefault();\n    if (!validateInput()) {\n      return;\n    }\n    const loginData = {\n      username,\n      password,\n      accountNumber // Include only if it's a normal user login\n    };\n    try {\n      // Send the login data to the backend API\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(loginData),\n        credentials: 'include' // Allow cookies to be sent\n      });\n      if (!response.ok) {\n        const responseBody = await response.json(); // Capture the error response\n        console.error('Login failed:', responseBody); // Log the error\n        throw new Error(`HTTP error! status: ${response.status}, message: ${responseBody.error}`);\n      }\n      const responseData = await response.json();\n      console.log('Login success:', responseData);\n      setSuccessMessage('Login successful');\n      setError(null);\n      navigate('/home');\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err.message || 'Something went wrong');\n      setSuccessMessage(null);\n    }\n  };\n\n  // Toggle between Login and Register Forms\n  const toggleForm = () => {\n    setIsLogin(!isLogin);\n    setError(null);\n    setSuccessMessage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shadow-lg p-4\",\n        style: {\n          maxWidth: '600px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: isLogin ? 'Login' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SuccessMessage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: isLogin ? handleLogin : handleRegister,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Username\",\n              value: username,\n              onChange: e => setUserName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), !isEmployee && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Account Number\",\n              value: accountNumber,\n              onChange: e => setAccountNumber(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Login as: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"user\",\n                name: \"userType\",\n                value: \"user\",\n                checked: !isEmployee,\n                onChange: () => setIsEmployee(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"user\",\n                children: \"Regular User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"employee\",\n                name: \"userType\",\n                value: \"employee\",\n                checked: isEmployee,\n                onChange: () => setIsEmployee(true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"employee\",\n                children: \"Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this), !isLogin && !isEmployee && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"First Name\",\n                value: userFirstName,\n                onChange: e => setUserFirstName(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Last Name\",\n                value: userLastName,\n                onChange: e => setUserLastName(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"ID Number\",\n                value: idNumber,\n                onChange: e => setIdNumber(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), !isLogin && isEmployee && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-info\",\n            children: \"Employees cannot register through this form. Please contact an admin.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary w-100\",\n              type: \"submit\",\n              children: isLogin ? 'Login' : 'Register'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-link\",\n            onClick: toggleForm,\n            children: isLogin ? 'Don\\'t have an account? Register' : 'Already have an account? Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginRegister, \"MlNyi7fSkn8JFQuzkZJmOARP9+s=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginRegister;\nexport default LoginRegister;\nvar _c;\n$RefreshReg$(_c, \"LoginRegister\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginRegister","_s","username","setUserName","password","setPassword","userFirstName","setUserFirstName","userLastName","setUserLastName","idNumber","setIdNumber","accountNumber","setAccountNumber","isEmployee","setIsEmployee","error","setError","successMessage","setSuccessMessage","isLogin","setIsLogin","navigate","validateInput","usernamePattern","passwordPattern","idNumberPattern","accountNumberPattern","test","ErrorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","SuccessMessage","handleRegister","e","preventDefault","userData","response","fetch","method","headers","body","JSON","stringify","credentials","ok","Error","status","responseData","json","console","log","message","setTimeout","err","handleLogin","loginData","responseBody","toggleForm","style","maxWidth","width","onSubmit","type","placeholder","value","onChange","target","required","id","name","checked","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/maler/Documents/GitHub/ST10096757_APDS7311_International_Payments_Portal-1/register.login/Frontend/src/components/LoginRegister.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';  // Import useNavigate\r\n\r\nconst LoginRegister = () => {\r\n    const [username, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [userFirstName, setUserFirstName] = useState('');\r\n    const [userLastName, setUserLastName] = useState('');\r\n    const [idNumber, setIdNumber] = useState('');\r\n    const [accountNumber, setAccountNumber] = useState('');\r\n    const [isEmployee, setIsEmployee] = useState(false); // State for employee toggle\r\n    const [error, setError] = useState(null);  // To store error messages\r\n    const [successMessage, setSuccessMessage] = useState(null);  // To store success messages\r\n    const [isLogin, setIsLogin] = useState(true); // For toggling between login/register forms\r\n\r\n    const navigate = useNavigate(); \r\n\r\n  const validateInput = () => {\r\n         const usernamePattern = /^[a-zA-Z0-9]{3,20}$/;  // Alphanumeric, 3-20 characters\r\n         const passwordPattern = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/;  // Minimum six characters, at least one letter and one number\r\n         const idNumberPattern = /^[0-9]{13}$/;  // 13 digit number\r\n         const accountNumberPattern = /^[0-9]{10}$/;  // 10 digit number\r\n \r\n         if (!usernamePattern.test(username)) {\r\n             setError(\"Invalid input. Please try again.\");\r\n             return false;\r\n         }\r\n         if (!passwordPattern.test(password)) {\r\n             setError(\"Invalid input. Please try again.\");\r\n             return false;\r\n         }\r\n         if (!isLogin && !idNumberPattern.test(idNumber)) {\r\n             setError(\"Invalid input. Please try again..\");\r\n             return false;\r\n         }\r\n         if (!isLogin && !accountNumberPattern.test(accountNumber)) {\r\n             setError(\"Invalid input. Please try again.\");\r\n             return false;\r\n         }\r\n         setError(null);\r\n         return true;\r\n     }   \r\n    \r\n    // Error message display\r\n    const ErrorMessage = () => {\r\n        if (error) {\r\n            return <div className=\"alert alert-danger\">{error}</div>;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const SuccessMessage = () => {\r\n        if (successMessage) {\r\n            return <div className=\"alert alert-success\">{successMessage}</div>;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // Registration handler\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        if (isEmployee) {\r\n            // If employee, prevent registration and show a message\r\n            setError('Employees cannot register through this form. Please contact an admin.');\r\n            return;\r\n        }\r\n\r\n        if (!validateInput()) { \r\n            return; \r\n        }  \r\n\r\n        const userData = {\r\n            username,\r\n            password,\r\n            userFirstName,\r\n            userLastName,\r\n            idNumber,\r\n            accountNumber,\r\n        };\r\n\r\n        try {\r\n            // Send the registration data to the backend API\r\n            const response = await fetch('/api/register', {  // Use the relative path\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(userData),\r\n                credentials: 'include', // Allow cookies to be sent\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            const responseData = await response.json(); // Parse JSON response\r\n            console.log('Registration success:', responseData);\r\n            setSuccessMessage(responseData.message);\r\n            setError(null);\r\n\r\n                // Navigate to the login form after successful registration\r\n                setTimeout(() => {\r\n                    setIsLogin(true);\r\n                    navigate('/');\r\n                }, 2000); // Optional delay for displaying success message\r\n\r\n        } catch (err) {\r\n            console.error('Registration error:', err);\r\n            setError(err.message || 'Something went wrong');\r\n            setSuccessMessage(null);\r\n        }\r\n    };\r\n\r\n    // Login handler\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!validateInput()) { \r\n            return;\r\n         }  \r\n\r\n        const loginData = {\r\n            username,\r\n            password,\r\n            accountNumber, // Include only if it's a normal user login\r\n        };\r\n    \r\n        try {\r\n            // Send the login data to the backend API\r\n            const response = await fetch('/api/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(loginData),\r\n                credentials: 'include', // Allow cookies to be sent\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                const responseBody = await response.json(); // Capture the error response\r\n                console.error('Login failed:', responseBody); // Log the error\r\n                throw new Error(`HTTP error! status: ${response.status}, message: ${responseBody.error}`);\r\n            }\r\n    \r\n            const responseData = await response.json();\r\n            console.log('Login success:', responseData);\r\n            setSuccessMessage('Login successful');\r\n            setError(null);\r\n            navigate('/home');\r\n        } catch (err) {\r\n            console.error('Login error:', err);\r\n            setError(err.message || 'Something went wrong');\r\n            setSuccessMessage(null);\r\n        }\r\n    };\r\n\r\n    // Toggle between Login and Register Forms\r\n    const toggleForm = () => {\r\n        setIsLogin(!isLogin);\r\n        setError(null);\r\n        setSuccessMessage(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row justify-content-center align-items-center\">\r\n                <div className=\"shadow-lg p-4\" style={{ maxWidth: '600px', width: '100%' }}>\r\n                    <h2 className=\"text-center\">{isLogin ? 'Login' : 'Register'}</h2>\r\n\r\n                    {/* Display Success/Failure messages */}\r\n                    <SuccessMessage />\r\n                    <ErrorMessage />\r\n\r\n                    <form onSubmit={isLogin ? handleLogin : handleRegister}>\r\n                        {/* Username */}\r\n                        <div className=\"form-group mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Username\"\r\n                                value={username}\r\n                                onChange={(e) => setUserName(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        {/* Password */}\r\n                        <div className=\"form-group mb-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        {/* Account Number (Only for regular users) */}\r\n                        {!isEmployee && (\r\n                            <div className=\"form-group mb-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Account Number\"\r\n                                    value={accountNumber}\r\n                                    onChange={(e) => setAccountNumber(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Employee Login Option (Only on Login Form) */}\r\n                        {isLogin && (\r\n                            <div className=\"form-group mb-3\">\r\n                                <label>Login as: </label>\r\n                                <div>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id=\"user\"\r\n                                        name=\"userType\"\r\n                                        value=\"user\"\r\n                                        checked={!isEmployee}\r\n                                        onChange={() => setIsEmployee(false)}\r\n                                    />\r\n                                    <label htmlFor=\"user\">Regular User</label>\r\n\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id=\"employee\"\r\n                                        name=\"userType\"\r\n                                        value=\"employee\"\r\n                                        checked={isEmployee}\r\n                                        onChange={() => setIsEmployee(true)}\r\n                                    />\r\n                                    <label htmlFor=\"employee\">Employee</label>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Additional fields for registration only */}\r\n                        {!isLogin && !isEmployee && (\r\n                            <>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"First Name\"\r\n                                        value={userFirstName}\r\n                                        onChange={(e) => setUserFirstName(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Last Name\"\r\n                                        value={userLastName}\r\n                                        onChange={(e) => setUserLastName(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"ID Number\"\r\n                                        value={idNumber}\r\n                                        onChange={(e) => setIdNumber(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n\r\n                        {/* Message for employees on the register page */}\r\n                        {!isLogin && isEmployee && (\r\n                            <div className=\"alert alert-info\">\r\n                                Employees cannot register through this form. Please contact an admin.\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group text-center\">\r\n                            <button className=\"btn btn-primary w-100\" type=\"submit\">\r\n                                {isLogin ? 'Login' : 'Register'}\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n\r\n                    {/* Switch between Login and Register */}\r\n                    <div className=\"text-center mt-3\">\r\n                        <button className=\"btn btn-link\" onClick={toggleForm}>\r\n                            {isLogin ? 'Don\\'t have an account? Register' : 'Already have an account? Login'}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginRegister;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}