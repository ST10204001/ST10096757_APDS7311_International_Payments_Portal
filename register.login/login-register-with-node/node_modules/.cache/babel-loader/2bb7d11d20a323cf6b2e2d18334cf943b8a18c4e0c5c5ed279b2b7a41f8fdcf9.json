{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Imrah\\\\Downloads\\\\APDS_MERN\\\\ST10096757_APDS7311_International_Payments_Portal\\\\register.login\\\\login-register-with-node\\\\src\\\\components\\\\LoginRegister.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginRegister = () => {\n  _s();\n  const [username, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [userFirstName, setUserFirstName] = useState('');\n  const [userLastName, setUserLastName] = useState('');\n  const [idNumber, setIdNumber] = useState('');\n  const [accountNumber, setAccountNumber] = useState('');\n  const [error, setError] = useState(null); // To store error messages\n  const [successMessage, setSuccessMessage] = useState(null); // To store success messages\n  const [isLogin, setIsLogin] = useState(true); // For toggling between login/register forms\n\n  const navigate = useNavigate();\n\n  // Error message display\n  const ErrorMessage = () => {\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this);\n    }\n    return null;\n  };\n  const SuccessMessage = () => {\n    if (successMessage) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this);\n    }\n    return null;\n  };\n\n  // Registration handler\n  const handleRegister = async e => {\n    e.preventDefault();\n    const userData = {\n      username,\n      password,\n      userFirstName,\n      userLastName,\n      idNumber,\n      accountNumber\n    };\n    try {\n      // Send the registration data to the backend API\n      const response = await fetch('/api/register', {\n        // Use the relative path\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData),\n        credentials: 'include' // Allow cookies to be sent\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const responseData = await response.json(); // Parse JSON response\n      console.log('Registration success:', responseData);\n      setSuccessMessage(responseData.message);\n      setError(null);\n\n      // Navigate to the login form after successful registration\n      setTimeout(() => {\n        setIsLogin(true);\n        navigate('/');\n      }, 2000); // Optional delay for displaying success message\n    } catch (err) {\n      console.error('Registration error:', err);\n      setError(err.message || 'Something went wrong');\n      setSuccessMessage(null);\n    }\n  };\n\n  // Login handler with Axios\n  const handleLogin = async e => {\n    e.preventDefault();\n    const loginData = {\n      username,\n      password,\n      accountNumber\n    };\n    try {\n      // Send the registration data to the backend API\n      const response = await fetch('/api/login', {\n        // Use the relative path\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(loginData),\n        credentials: 'include' // Allow cookies to be sent\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      console.log('Login success:', response.data);\n      setSuccessMessage('Login successful');\n      setError(null);\n\n      // Redirect to the home page after successful login\n      navigate('/home');\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err.response ? err.response.data.error : 'Something went wrong');\n      setSuccessMessage(null);\n    }\n  };\n\n  // Toggle between Login and Register Forms\n  const toggleForm = () => {\n    setIsLogin(!isLogin);\n    setError(null);\n    setSuccessMessage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shadow-lg p-4\",\n        style: {\n          maxWidth: '600px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: isLogin ? 'Login' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SuccessMessage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: isLogin ? handleLogin : handleRegister,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Username\",\n              value: username,\n              onChange: e => setUserName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Account Number\",\n              value: accountNumber,\n              onChange: e => setAccountNumber(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), !isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"First Name\",\n                value: userFirstName,\n                onChange: e => setUserFirstName(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Last Name\",\n                value: userLastName,\n                onChange: e => setUserLastName(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"ID Number\",\n                value: idNumber,\n                onChange: e => setIdNumber(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary w-100\",\n              type: \"submit\",\n              children: isLogin ? 'Login' : 'Register'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-link\",\n            onClick: toggleForm,\n            children: isLogin ? 'Don\\'t have an account? Register' : 'Already have an account? Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginRegister, \"8PagTXsAmZ+qDRMeVfr3xbtV4gs=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginRegister;\nexport default LoginRegister;\nvar _c;\n$RefreshReg$(_c, \"LoginRegister\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginRegister","_s","username","setUserName","password","setPassword","userFirstName","setUserFirstName","userLastName","setUserLastName","idNumber","setIdNumber","accountNumber","setAccountNumber","error","setError","successMessage","setSuccessMessage","isLogin","setIsLogin","navigate","ErrorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","SuccessMessage","handleRegister","e","preventDefault","userData","response","fetch","method","headers","body","JSON","stringify","credentials","ok","Error","status","responseData","json","console","log","message","setTimeout","err","handleLogin","loginData","data","toggleForm","style","maxWidth","width","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Imrah/Downloads/APDS_MERN/ST10096757_APDS7311_International_Payments_Portal/register.login/login-register-with-node/src/components/LoginRegister.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';  // Import useNavigate\r\n\r\n\r\nconst LoginRegister = () => {\r\n    const [username, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [userFirstName, setUserFirstName] = useState('');\r\n    const [userLastName, setUserLastName] = useState('');\r\n    const [idNumber, setIdNumber] = useState('');\r\n    const [accountNumber, setAccountNumber] = useState('');\r\n    const [error, setError] = useState(null);  // To store error messages\r\n    const [successMessage, setSuccessMessage] = useState(null);  // To store success messages\r\n    const [isLogin, setIsLogin] = useState(true); // For toggling between login/register forms\r\n\r\n    const navigate = useNavigate(); \r\n\r\n    // Error message display\r\n    const ErrorMessage = () => {\r\n        if (error) {\r\n            return <div className=\"alert alert-danger\">{error}</div>;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const SuccessMessage = () => {\r\n        if (successMessage) {\r\n            return <div className=\"alert alert-success\">{successMessage}</div>;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // Registration handler\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        const userData = {\r\n            username,\r\n            password,\r\n            userFirstName,\r\n            userLastName,\r\n            idNumber,\r\n            accountNumber,\r\n        };\r\n\r\n        try {\r\n            // Send the registration data to the backend API\r\n            const response = await fetch('/api/register', {  // Use the relative path\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(userData),\r\n                credentials: 'include', // Allow cookies to be sent\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            const responseData = await response.json(); // Parse JSON response\r\n            console.log('Registration success:', responseData);\r\n            setSuccessMessage(responseData.message);\r\n            setError(null);\r\n\r\n                // Navigate to the login form after successful registration\r\n                setTimeout(() => {\r\n                    setIsLogin(true);\r\n                    navigate('/');\r\n                }, 2000); // Optional delay for displaying success message\r\n\r\n        } catch (err) {\r\n            console.error('Registration error:', err);\r\n            setError(err.message || 'Something went wrong');\r\n            setSuccessMessage(null);\r\n        }\r\n    };\r\n\r\n    // Login handler with Axios\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const loginData = {\r\n            username,\r\n            password,\r\n            accountNumber,\r\n        };\r\n\r\n        try {\r\n            // Send the registration data to the backend API\r\n            const response = await fetch('/api/login', {  // Use the relative path\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(loginData),\r\n                credentials: 'include', // Allow cookies to be sent\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            console.log('Login success:', response.data);\r\n            setSuccessMessage('Login successful');\r\n            setError(null);\r\n\r\n            // Redirect to the home page after successful login\r\n            navigate('/home');\r\n        } catch (err) {\r\n            console.error('Login error:', err);\r\n            setError(err.response ? err.response.data.error : 'Something went wrong');\r\n            setSuccessMessage(null);\r\n        }\r\n    };\r\n\r\n    // Toggle between Login and Register Forms\r\n    const toggleForm = () => {\r\n        setIsLogin(!isLogin);\r\n        setError(null);\r\n        setSuccessMessage(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row justify-content-center align-items-center\">\r\n                <div className=\"shadow-lg p-4\" style={{ maxWidth: '600px', width: '100%' }}>\r\n                    <h2 className=\"text-center\">{isLogin ? 'Login' : 'Register'}</h2>\r\n\r\n                    {/* Display Success/Failure messages */}\r\n                    <SuccessMessage />\r\n                    <ErrorMessage />\r\n\r\n                    <form onSubmit={isLogin ? handleLogin : handleRegister}>\r\n                        {/* Username */}\r\n                        <div className=\"form-group mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Username\"\r\n                                value={username}\r\n                                onChange={(e) => setUserName(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        {/* Password */}\r\n                        <div className=\"form-group mb-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        {/* Account Number */}\r\n                        <div className=\"form-group mb-3\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Account Number\"\r\n                                        value={accountNumber}\r\n                                        onChange={(e) => setAccountNumber(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n\r\n                        {/* Additional fields for registration only */}\r\n                        {!isLogin && (\r\n                            <>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"First Name\"\r\n                                        value={userFirstName}\r\n                                        onChange={(e) => setUserFirstName(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Last Name\"\r\n                                        value={userLastName}\r\n                                        onChange={(e) => setUserLastName(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"ID Number\"\r\n                                        value={idNumber}\r\n                                        onChange={(e) => setIdNumber(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n\r\n                        <div className=\"form-group text-center\">\r\n                            <button className=\"btn btn-primary w-100\" type=\"submit\">\r\n                                {isLogin ? 'Login' : 'Register'}\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n\r\n                    {/* Switch between Login and Register */}\r\n                    <div className=\"text-center mt-3\">\r\n                        <button className=\"btn btn-link\" onClick={toggleForm}>\r\n                            {isLogin ? 'Don\\'t have an account? Register' : 'Already have an account? Login'}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginRegister;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}